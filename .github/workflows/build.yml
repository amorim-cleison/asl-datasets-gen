name: Build

on:
  push:
    # paths-ignore:
    #  -
    branches: 
      - master
      - develop
  pull_request:
    # paths-ignore:
    #  -
    branches:
      - '**'

jobs:
  build:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
        matrix:
          os: [Ubuntu, Windows]
          python-version: [3.7]
          poetry-version: [1.1.2]
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
    
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup Poetry ${{ matrix.poetry-version }}
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ matrix.poetry-version }}

    - name: Configure Poetry
      shell: bash
      run: poetry config virtualenvs.in-project true

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: timeout 10s python -m poetry run pip --version || rm -rf .venv

    - name: Install dependencies
      shell: bash
      run: poetry install

    # - name: Run tests
    #   shell: bash
    #   run: poetry run python -m pytest -v tests
